<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="analysisColorFontHeader" xml:space="preserve">
    <value>{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Verdana;}{\f1{\colortbl ;\red255\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;}\fswiss\fcharset0 Arial;}}</value>
  </data>
  <data name="analysisHeaderText" xml:space="preserve">
    <value>{\*\generator Msftedit 5.41.21.2506;}\viewkind4\uc1\pard\cf0\f0\fs20 If you're having trouble with ObjectListView, consider the following analysis of your list and list item types.  The list is the object that you provided in the ObjectListView constructor.  The list items are the objects contained in the list.\par\par</value>
  </data>
  <data name="analysisListItemNoIEditableObject" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360 It does \cf1 not\cf0  support IEditableObject, which means that you cannot cancel changes made through a bound control such as the DataGridView.\par</value>
  </data>
  <data name="analysisListItemNoINotifyPropertyChanged" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360 It does \cf1 not\cf0  support INotifyPropertyChanged, but \cf3 does\cf0  supply one or more property change events.  This means some or all changes to property values will be reflected in the view.\par</value>
  </data>
  <data name="analysisListItemNoINotifyPropertyChangedNoPropertyChangedEvents" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360 It does \cf1 not\cf0  support INotifyPropertyChanged or property change events, which means that changes to property values will not be refected in the view.\par</value>
  </data>
  <data name="analysisListItemOptimal" xml:space="preserve">
    <value>\cf3\b Your list item type \cf0\i {0}\cf3\i0  is optimal.\cf0\b0\par</value>
  </data>
  <data name="analysisListItemSubOptimal" xml:space="preserve">
    <value>\pard\cf1\b\f0\fs20 Your list item type \cf0\i {0}\cf1\i0  is sub-optimal.\cf0\b0\par</value>
  </data>
  <data name="analysisListItemSupportsIEditableObject" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360 It \cf3 does\cf0  support IEditableObject, which allows you to cancel changes made through a bound control such as the DataGridView.\par </value>
  </data>
  <data name="analysisListItemSupportsINotifyPropertyChanged" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360 It \cf3 does\cf0  support INotifyPropertyChanged, which means that changes to property values will be refected in the view.\par </value>
  </data>
  <data name="analysisListModifications" xml:space="preserve">
    <value>\pard\par\cf2\b List modifications:\cf0\b0\par </value>
  </data>
  <data name="analysisListNoIRaiseItemChangedEvents" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360 It does \cf1 not\cf0  support IRaiseItemChangedEvents, which means that list item changes reported as PropertyChanged events will not be reflected in the view.\par </value>
  </data>
  <data name="analysisListNoListChanged" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360 It does \cf1 not\cf0  support the ListChanged event, which means that added and deleted items will not be reflected in the view.\par </value>
  </data>
  <data name="analysisListNotSynced" xml:space="preserve">
    <value>The list makes no claims to thread safety.\par </value>
  </data>
  <data name="analysisListOptimal" xml:space="preserve">
    <value>\pard\par\cf3\b Your list type \cf0\i {0}\cf3\i0  is optimal.\cf0\b0\par</value>
  </data>
  <data name="analysisListReadOnly" xml:space="preserve">
    <value>The list is read-only, which means that you cannot add, change, or delete list items through the view or a bound control.\par </value>
  </data>
  <data name="analysisListSubOptimal" xml:space="preserve">
    <value>\pard\par\cf1\b Your list type \cf0\i {0}\cf1\i0  is sub-optimal.\cf0\b0\par</value>
  </data>
  <data name="analysisListSupportsIRaiseItemChangedEvents" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360 It \cf3 does\cf0  support IRaiseItemChangedEvents, which means that list item changes reported as PropertyChanged events will be reflected in the view.\par</value>
  </data>
  <data name="analysisListSupportsListChanged" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360 It \cf3 does\cf0  support the ListChanged event, which means that added and deleted items will be reflected in the view.\par</value>
  </data>
  <data name="analysisListSynced" xml:space="preserve">
    <value>The list claims to be thread-safe, and offers a SyncRoot object for lock operations.\par </value>
  </data>
  <data name="analysisListThreadSafety" xml:space="preserve">
    <value>\pard\par\cf2\b List thread safety:\cf0\b0\par </value>
  </data>
  <data name="analysisListWritableFixedSize" xml:space="preserve">
    <value>The list is writable but is fixed in size, which means that you can change or replace list items through the view or a bound control, but cannot add or remove items.\par </value>
  </data>
  <data name="analysisListWritableVariableSize" xml:space="preserve">
    <value>The list is writable and can change in size, which allows you to add, change, and remove list items through the view or a bound control.\par </value>
  </data>
  <data name="analysisRecommendations" xml:space="preserve">
    <value>\pard\par\cf2\b Recommendations:\cf0\b0\par </value>
  </data>
  <data name="analysisRecommendationsBindingListT" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360\f1 A recommended list type is BindingList&lt;T&gt;, where T is your list item type.  BindingList&lt;T&gt; implements both IBindingList and IRaiseItemChangedEvents.\par</value>
  </data>
  <data name="analysisRecommendationsIEditableObject" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360 Implement IEditableObject for your list item type (\cf2 optional\cf0 ).\par</value>
  </data>
  <data name="analysisRecommendationsINotifyPropertyChanged" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360 Implement INotifyPropertyChanged for your list item type (\cf1 important\cf0 ).\par</value>
  </data>
  <data name="analysisRecommendationsIRaiseItemChangedEvents" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360 Implement IRaiseItemChangedEvents for your list type (\cf1 important\cf0 ).\par</value>
  </data>
  <data name="analysisRecommendationsListChanged" xml:space="preserve">
    <value>\pard{\pntext\f2\'B7\tab}{\*\pn\pnlvlblt\pnf2\pnindent0{\pntxtb\'B7}}\fi-360\li360 Implement IBindingList or provide a ListChanged event for your list type (\cf1 important\cf0 ).\par</value>
  </data>
</root>