/*

This file was automatically generated as follows:

Download the xsd file from 
    http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition/ReportDefinition.xsd

Run the xsd.exe tool as follows:
    "C:\Program Files\Microsoft Visual Studio 8\SDK\v2.0\Bin\xsd.exe" /c /namespace:Rdl ReportDefinition.xsd
*/

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.42.
// 

using System;
using System.CodeDom.Compiler;
using System.ComponentModel;
using System.Diagnostics;
using System.Xml;
using System.Xml.Serialization;

namespace Rdl
{
  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(AnonymousType = true)]
  [XmlRoot(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IsNullable = false)]
  public partial class Report
  {
    private object[] itemsField;

    private ItemsChoiceType37[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Author", typeof (string))]
    [XmlElement("AutoRefresh", typeof (uint))]
    [XmlElement("Body", typeof (BodyType))]
    [XmlElement("BottomMargin", typeof (string), DataType = "normalizedString")]
    [XmlElement("Classes", typeof (ClassesType))]
    [XmlElement("Code", typeof (string))]
    [XmlElement("CodeModules", typeof (CodeModulesType))]
    [XmlElement("CustomProperties", typeof (CustomPropertiesType))]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementStyle", typeof (ReportDataElementStyle))]
    [XmlElement("DataSchema", typeof (string))]
    [XmlElement("DataSets", typeof (DataSetsType))]
    [XmlElement("DataSources", typeof (DataSourcesType))]
    [XmlElement("DataTransform", typeof (string))]
    [XmlElement("Description", typeof (string))]
    [XmlElement("EmbeddedImages", typeof (EmbeddedImagesType))]
    [XmlElement("InteractiveHeight", typeof (string), DataType = "normalizedString")]
    [XmlElement("InteractiveWidth", typeof (string), DataType = "normalizedString")]
    [XmlElement("Language", typeof (string))]
    [XmlElement("LeftMargin", typeof (string), DataType = "normalizedString")]
    [XmlElement("PageFooter", typeof (PageHeaderFooterType))]
    [XmlElement("PageHeader", typeof (PageHeaderFooterType))]
    [XmlElement("PageHeight", typeof (string), DataType = "normalizedString")]
    [XmlElement("PageWidth", typeof (string), DataType = "normalizedString")]
    [XmlElement("ReportParameters", typeof (ReportParametersType))]
    [XmlElement("RightMargin", typeof (string), DataType = "normalizedString")]
    [XmlElement("TopMargin", typeof (string), DataType = "normalizedString")]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType37[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class BodyType
  {
    private object[] itemsField;

    private ItemsChoiceType30[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("ColumnSpacing", typeof (string), DataType = "normalizedString")]
    [XmlElement("Columns", typeof (uint))]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("ReportItems", typeof (ReportItemsType))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType30[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ReportItemsType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Chart", typeof (ChartType))]
    [XmlElement("CustomReportItem", typeof (CustomReportItemType))]
    [XmlElement("Image", typeof (ImageType))]
    [XmlElement("Line", typeof (LineType))]
    [XmlElement("List", typeof (ListType))]
    [XmlElement("Matrix", typeof (MatrixType))]
    [XmlElement("Rectangle", typeof (RectangleType))]
    [XmlElement("Subreport", typeof (SubreportType))]
    [XmlElement("Table", typeof (TableType))]
    [XmlElement("Textbox", typeof (TextboxType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ChartType
  {
    private object[] itemsField;

    private ItemsChoiceType27[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Action", typeof (ActionType))]
    [XmlElement("Bookmark", typeof (string))]
    [XmlElement("CategoryAxis", typeof (CategoryAxisType))]
    [XmlElement("CategoryGroupings", typeof (CategoryGroupingsType))]
    [XmlElement("ChartData", typeof (ChartDataType))]
    [XmlElement("ChartElementOutput", typeof (ChartTypeChartElementOutput))]
    [XmlElement("CustomProperties", typeof (CustomPropertiesType))]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementOutput", typeof (ChartTypeDataElementOutput))]
    [XmlElement("DataSetName", typeof (string))]
    [XmlElement("Filters", typeof (FiltersType))]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("KeepTogether", typeof (bool))]
    [XmlElement("Label", typeof (string))]
    [XmlElement("Left", typeof (string), DataType = "normalizedString")]
    [XmlElement("Legend", typeof (LegendType))]
    [XmlElement("LinkToChild", typeof (string))]
    [XmlElement("NoRows", typeof (string))]
    [XmlElement("PageBreakAtEnd", typeof (bool))]
    [XmlElement("PageBreakAtStart", typeof (bool))]
    [XmlElement("Palette", typeof (ChartTypePalette))]
    [XmlElement("PlotArea", typeof (PlotAreaType))]
    [XmlElement("PointWidth", typeof (uint))]
    [XmlElement("SeriesGroupings", typeof (SeriesGroupingsType))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("Subtype", typeof (ChartTypeSubtype))]
    [XmlElement("ThreeDProperties", typeof (ThreeDPropertiesType))]
    [XmlElement("Title", typeof (TitleType))]
    [XmlElement("ToolTip", typeof (string))]
    [XmlElement("Top", typeof (string), DataType = "normalizedString")]
    [XmlElement("Type", typeof (ChartTypeType))]
    [XmlElement("ValueAxis", typeof (ValueAxisType))]
    [XmlElement("Visibility", typeof (VisibilityType))]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    [XmlElement("ZIndex", typeof (uint))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType27[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ActionType
  {
    private object[] itemsField;

    private ItemsChoiceType8[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("BookmarkLink", typeof (string))]
    [XmlElement("Drillthrough", typeof (DrillthroughType))]
    [XmlElement("Hyperlink", typeof (string))]
    [XmlElement("Label", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType8[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DrillthroughType
  {
    private object[] itemsField;

    private ItemsChoiceType7[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("BookmarkLink", typeof (string))]
    [XmlElement("Parameters", typeof (ParametersType))]
    [XmlElement("ReportName", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType7[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ParametersType
  {
    private ParameterType[] parameterField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("Parameter")]
    public ParameterType[] Parameter
    {
      get { return parameterField; }
      set { parameterField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ParameterType
  {
    private object[] itemsField;

    private ItemsChoiceType6[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Omit", typeof (string))]
    [XmlElement("Value", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType6[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute()]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType6
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Omit,

    /// <remarks />
    Value,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ClassType
  {
    private object[] itemsField;

    private ItemsChoiceType36[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("ClassName", typeof (string))]
    [XmlElement("InstanceName", typeof (string), DataType = "normalizedString")]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType36[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType36
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    ClassName,

    /// <remarks />
    InstanceName,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ClassesType
  {
    private ClassType[] classField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("Class")]
    public ClassType[] Class
    {
      get { return classField; }
      set { classField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class CodeModulesType
  {
    private string[] codeModuleField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("CodeModule")]
    public string[] CodeModule
    {
      get { return codeModuleField; }
      set { codeModuleField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class EmbeddedImageType
  {
    private object[] itemsField;

    private ItemsChoiceType35[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("ImageData", typeof (string))]
    [XmlElement("MIMEType", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType35[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType35
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    ImageData,

    /// <remarks />
    MIMEType,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class EmbeddedImagesType
  {
    private EmbeddedImageType[] embeddedImageField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("EmbeddedImage")]
    public EmbeddedImageType[] EmbeddedImage
    {
      get { return embeddedImageField; }
      set { embeddedImageField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class PageHeaderFooterType
  {
    private object[] itemsField;

    private ItemsChoiceType34[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("PrintOnFirstPage", typeof (bool))]
    [XmlElement("PrintOnLastPage", typeof (bool))]
    [XmlElement("ReportItems", typeof (ReportItemsType))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType34[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class StyleType
  {
    private object[] itemsField;

    private ItemsChoiceType5[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("BackgroundColor", typeof (string))]
    [XmlElement("BackgroundGradientEndColor", typeof (string))]
    [XmlElement("BackgroundGradientType", typeof (string))]
    [XmlElement("BackgroundImage", typeof (BackgroundImageType))]
    [XmlElement("BorderColor", typeof (BorderColorStyleWidthType))]
    [XmlElement("BorderStyle", typeof (BorderColorStyleWidthType))]
    [XmlElement("BorderWidth", typeof (BorderColorStyleWidthType))]
    [XmlElement("Calendar", typeof (string))]
    [XmlElement("Color", typeof (string))]
    [XmlElement("Direction", typeof (string))]
    [XmlElement("FontFamily", typeof (string))]
    [XmlElement("FontSize", typeof (string))]
    [XmlElement("FontStyle", typeof (string))]
    [XmlElement("FontWeight", typeof (string))]
    [XmlElement("Format", typeof (string))]
    [XmlElement("Language", typeof (string))]
    [XmlElement("LineHeight", typeof (string))]
    [XmlElement("NumeralLanguage", typeof (string))]
    [XmlElement("NumeralVariant", typeof (string))]
    [XmlElement("PaddingBottom", typeof (string))]
    [XmlElement("PaddingLeft", typeof (string))]
    [XmlElement("PaddingRight", typeof (string))]
    [XmlElement("PaddingTop", typeof (string))]
    [XmlElement("TextAlign", typeof (string))]
    [XmlElement("TextDecoration", typeof (string))]
    [XmlElement("UnicodeBiDi", typeof (string))]
    [XmlElement("VerticalAlign", typeof (string))]
    [XmlElement("WritingMode", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType5[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class BackgroundImageType
  {
    private object[] itemsField;

    private ItemsChoiceType4[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("BackgroundRepeat", typeof (string))]
    [XmlElement("MIMEType", typeof (string))]
    [XmlElement("Source", typeof (BackgroundImageTypeSource))]
    [XmlElement("Value", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType4[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum BackgroundImageTypeSource
  {
    /// <remarks />
    External,

    /// <remarks />
    Embedded,

    /// <remarks />
    Database,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType4
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    BackgroundRepeat,

    /// <remarks />
    MIMEType,

    /// <remarks />
    Source,

    /// <remarks />
    Value,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class BorderColorStyleWidthType
  {
    private object[] itemsField;

    private ItemsChoiceType3[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Bottom", typeof (string))]
    [XmlElement("Default", typeof (string))]
    [XmlElement("Left", typeof (string))]
    [XmlElement("Right", typeof (string))]
    [XmlElement("Top", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType3[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType3
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Bottom,

    /// <remarks />
    Default,

    /// <remarks />
    Left,

    /// <remarks />
    Right,

    /// <remarks />
    Top,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType5
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    BackgroundColor,

    /// <remarks />
    BackgroundGradientEndColor,

    /// <remarks />
    BackgroundGradientType,

    /// <remarks />
    BackgroundImage,

    /// <remarks />
    BorderColor,

    /// <remarks />
    BorderStyle,

    /// <remarks />
    BorderWidth,

    /// <remarks />
    Calendar,

    /// <remarks />
    Color,

    /// <remarks />
    Direction,

    /// <remarks />
    FontFamily,

    /// <remarks />
    FontSize,

    /// <remarks />
    FontStyle,

    /// <remarks />
    FontWeight,

    /// <remarks />
    Format,

    /// <remarks />
    Language,

    /// <remarks />
    LineHeight,

    /// <remarks />
    NumeralLanguage,

    /// <remarks />
    NumeralVariant,

    /// <remarks />
    PaddingBottom,

    /// <remarks />
    PaddingLeft,

    /// <remarks />
    PaddingRight,

    /// <remarks />
    PaddingTop,

    /// <remarks />
    TextAlign,

    /// <remarks />
    TextDecoration,

    /// <remarks />
    UnicodeBiDi,

    /// <remarks />
    VerticalAlign,

    /// <remarks />
    WritingMode,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType34
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Height,

    /// <remarks />
    PrintOnFirstPage,

    /// <remarks />
    PrintOnLastPage,

    /// <remarks />
    ReportItems,

    /// <remarks />
    Style,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ParameterValueType
  {
    private object[] itemsField;

    private ItemsChoiceType32[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Label", typeof (string))]
    [XmlElement("Value", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType32[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType32
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Label,

    /// <remarks />
    Value,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ParameterValuesType
  {
    private ParameterValueType[] parameterValueField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("ParameterValue")]
    public ParameterValueType[] ParameterValue
    {
      get { return parameterValueField; }
      set { parameterValueField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ValidValuesType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("DataSetReference", typeof (DataSetReferenceType))]
    [XmlElement("ParameterValues", typeof (ParameterValuesType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataSetReferenceType
  {
    private object[] itemsField;

    private ItemsChoiceType31[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("DataSetName", typeof (string))]
    [XmlElement("LabelField", typeof (string))]
    [XmlElement("ValueField", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType31[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType31
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    DataSetName,

    /// <remarks />
    LabelField,

    /// <remarks />
    ValueField,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ValuesType
  {
    private string[] valueField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("Value")]
    public string[] Value
    {
      get { return valueField; }
      set { valueField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DefaultValueType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("DataSetReference", typeof (DataSetReferenceType))]
    [XmlElement("Values", typeof (ValuesType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ReportParameterType
  {
    private object[] itemsField;

    private ItemsChoiceType33[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("AllowBlank", typeof (bool))]
    [XmlElement("DataType", typeof (ReportParameterTypeDataType))]
    [XmlElement("DefaultValue", typeof (DefaultValueType))]
    [XmlElement("Hidden", typeof (bool))]
    [XmlElement("MultiValue", typeof (bool))]
    [XmlElement("Nullable", typeof (bool))]
    [XmlElement("Prompt", typeof (string))]
    [XmlElement("UsedInQuery", typeof (ReportParameterTypeUsedInQuery))]
    [XmlElement("ValidValues", typeof (ValidValuesType))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType33[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ReportParameterTypeDataType
  {
    /// <remarks />
    Boolean,

    /// <remarks />
    DateTime,

    /// <remarks />
    Integer,

    /// <remarks />
    Float,

    /// <remarks />
    String,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ReportParameterTypeUsedInQuery
  {
    /// <remarks />
    False,

    /// <remarks />
    True,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType33
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    AllowBlank,

    /// <remarks />
    DataType,

    /// <remarks />
    DefaultValue,

    /// <remarks />
    Hidden,

    /// <remarks />
    MultiValue,

    /// <remarks />
    Nullable,

    /// <remarks />
    Prompt,

    /// <remarks />
    UsedInQuery,

    /// <remarks />
    ValidValues,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ReportParametersType
  {
    private ReportParameterType[] reportParameterField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("ReportParameter")]
    public ReportParameterType[] ReportParameter
    {
      get { return reportParameterField; }
      set { reportParameterField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataCellType
  {
    private DataValueType[] dataValueField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("DataValue")]
    public DataValueType[] DataValue
    {
      get { return dataValueField; }
      set { dataValueField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataValueType
  {
    private object[] itemsField;

    private ItemsChoiceType22[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Name", typeof (string))]
    [XmlElement("Value", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType22[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType22
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Name,

    /// <remarks />
    Value,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataRowType
  {
    private DataCellType[] dataCellField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("DataCell")]
    public DataCellType[] DataCell
    {
      get { return dataCellField; }
      set { dataCellField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataRowsType
  {
    private DataRowType[] dataRowField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("DataRow")]
    public DataRowType[] DataRow
    {
      get { return dataRowField; }
      set { dataRowField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataRowGroupingsType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("DataGroupings", typeof (DataGroupingsType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataGroupingsType
  {
    private DataGroupingType[] dataGroupingField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("DataGrouping")]
    public DataGroupingType[] DataGrouping
    {
      get { return dataGroupingField; }
      set { dataGroupingField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataGroupingType
  {
    private object[] itemsField;

    private ItemsChoiceType28[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("CustomProperties", typeof (CustomPropertiesType))]
    [XmlElement("DataGroupings", typeof (DataGroupingsType))]
    [XmlElement("Grouping", typeof (GroupingType))]
    [XmlElement("Sorting", typeof (SortingType))]
    [XmlElement("Static", typeof (bool))]
    [XmlElement("Subtotal", typeof (bool))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType28[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class CustomPropertiesType
  {
    private CustomPropertyType[] customPropertyField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("CustomProperty")]
    public CustomPropertyType[] CustomProperty
    {
      get { return customPropertyField; }
      set { customPropertyField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class CustomPropertyType
  {
    private object[] itemsField;

    private ItemsChoiceType10[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Name", typeof (string))]
    [XmlElement("Value", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType10[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType10
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Name,

    /// <remarks />
    Value,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class GroupingType
  {
    private object[] itemsField;

    private ItemsChoiceType17[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("CustomProperties", typeof (CustomPropertiesType))]
    [XmlElement("DataCollectionName", typeof (string))]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementOutput", typeof (GroupingTypeDataElementOutput))]
    [XmlElement("Filters", typeof (FiltersType))]
    [XmlElement("GroupExpressions", typeof (GroupExpressionsType))]
    [XmlElement("Label", typeof (string))]
    [XmlElement("PageBreakAtEnd", typeof (bool))]
    [XmlElement("PageBreakAtStart", typeof (bool))]
    [XmlElement("Parent", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType17[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum GroupingTypeDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class FiltersType
  {
    private FilterType[] filterField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("Filter")]
    public FilterType[] Filter
    {
      get { return filterField; }
      set { filterField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class FilterType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("FilterExpression", typeof (string))]
    [XmlElement("FilterValues", typeof (FilterValuesType))]
    [XmlElement("Operator", typeof (FilterTypeOperator))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class FilterValuesType
  {
    private string[] filterValueField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("FilterValue")]
    public string[] FilterValue
    {
      get { return filterValueField; }
      set { filterValueField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum FilterTypeOperator
  {
    /// <remarks />
    Equal,

    /// <remarks />
    Like,

    /// <remarks />
    NotEqual,

    /// <remarks />
    GreaterThan,

    /// <remarks />
    GreaterThanOrEqual,

    /// <remarks />
    LessThan,

    /// <remarks />
    LessThanOrEqual,

    /// <remarks />
    TopN,

    /// <remarks />
    BottomN,

    /// <remarks />
    TopPercent,

    /// <remarks />
    BottomPercent,

    /// <remarks />
    In,

    /// <remarks />
    Between,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class GroupExpressionsType
  {
    private string[] groupExpressionField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("GroupExpression")]
    public string[] GroupExpression
    {
      get { return groupExpressionField; }
      set { groupExpressionField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType17
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    CustomProperties,

    /// <remarks />
    DataCollectionName,

    /// <remarks />
    DataElementName,

    /// <remarks />
    DataElementOutput,

    /// <remarks />
    Filters,

    /// <remarks />
    GroupExpressions,

    /// <remarks />
    Label,

    /// <remarks />
    PageBreakAtEnd,

    /// <remarks />
    PageBreakAtStart,

    /// <remarks />
    Parent,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class SortingType
  {
    private SortByType[] sortByField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("SortBy")]
    public SortByType[] SortBy
    {
      get { return sortByField; }
      set { sortByField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class SortByType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Direction", typeof (SortByTypeDirection))]
    [XmlElement("SortExpression", typeof (string))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum SortByTypeDirection
  {
    /// <remarks />
    Ascending,

    /// <remarks />
    Descending,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType28
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    CustomProperties,

    /// <remarks />
    DataGroupings,

    /// <remarks />
    Grouping,

    /// <remarks />
    Sorting,

    /// <remarks />
    Static,

    /// <remarks />
    Subtotal,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataColumnGroupingsType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("DataGroupings", typeof (DataGroupingsType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class CustomDataType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("DataColumnGroupings", typeof (DataColumnGroupingsType))]
    [XmlElement("DataRowGroupings", typeof (DataRowGroupingsType))]
    [XmlElement("DataRows", typeof (DataRowsType))]
    [XmlElement("DataSetName", typeof (string))]
    [XmlElement("Filters", typeof (FiltersType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class CustomReportItemType
  {
    private object[] itemsField;

    private ItemsChoiceType29[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("AltReportItem", typeof (ReportItemsType))]
    [XmlElement("Bookmark", typeof (string))]
    [XmlElement("CustomData", typeof (CustomDataType))]
    [XmlElement("CustomProperties", typeof (CustomPropertiesType))]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementOutput", typeof (CustomReportItemTypeDataElementOutput))]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("Label", typeof (string))]
    [XmlElement("Left", typeof (string), DataType = "normalizedString")]
    [XmlElement("RepeatWith", typeof (string))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("Top", typeof (string), DataType = "normalizedString")]
    [XmlElement("Type", typeof (string))]
    [XmlElement("Visibility", typeof (VisibilityType))]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    [XmlElement("ZIndex", typeof (uint))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType29[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum CustomReportItemTypeDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class VisibilityType
  {
    private object[] itemsField;

    private ItemsChoiceType9[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Hidden", typeof (string))]
    [XmlElement("ToggleItem", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType9[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType9
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Hidden,

    /// <remarks />
    ToggleItem,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType29
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    AltReportItem,

    /// <remarks />
    Bookmark,

    /// <remarks />
    CustomData,

    /// <remarks />
    CustomProperties,

    /// <remarks />
    DataElementName,

    /// <remarks />
    DataElementOutput,

    /// <remarks />
    Height,

    /// <remarks />
    Label,

    /// <remarks />
    Left,

    /// <remarks />
    RepeatWith,

    /// <remarks />
    Style,

    /// <remarks />
    Top,

    /// <remarks />
    Type,

    /// <remarks />
    Visibility,

    /// <remarks />
    Width,

    /// <remarks />
    ZIndex,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class PlotAreaType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Style", typeof (StyleType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ThreeDPropertiesType
  {
    private object[] itemsField;

    private ItemsChoiceType26[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Clustered", typeof (bool))]
    [XmlElement("DepthRatio", typeof (uint))]
    [XmlElement("DrawingStyle", typeof (ThreeDPropertiesTypeDrawingStyle))]
    [XmlElement("Enabled", typeof (bool))]
    [XmlElement("GapDepth", typeof (uint))]
    [XmlElement("HeightRatio", typeof (uint))]
    [XmlElement("Inclination", typeof (string), DataType = "integer")]
    [XmlElement("Perspective", typeof (uint))]
    [XmlElement("ProjectionMode", typeof (ThreeDPropertiesTypeProjectionMode))]
    [XmlElement("Rotation", typeof (string), DataType = "integer")]
    [XmlElement("Shading", typeof (ThreeDPropertiesTypeShading))]
    [XmlElement("WallThickness", typeof (uint))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType26[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ThreeDPropertiesTypeDrawingStyle
  {
    /// <remarks />
    Cube,

    /// <remarks />
    Cylinder,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ThreeDPropertiesTypeProjectionMode
  {
    /// <remarks />
    Perspective,

    /// <remarks />
    Orthographic,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ThreeDPropertiesTypeShading
  {
    /// <remarks />
    None,

    /// <remarks />
    Simple,

    /// <remarks />
    Real,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType26
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Clustered,

    /// <remarks />
    DepthRatio,

    /// <remarks />
    DrawingStyle,

    /// <remarks />
    Enabled,

    /// <remarks />
    GapDepth,

    /// <remarks />
    HeightRatio,

    /// <remarks />
    Inclination,

    /// <remarks />
    Perspective,

    /// <remarks />
    ProjectionMode,

    /// <remarks />
    Rotation,

    /// <remarks />
    Shading,

    /// <remarks />
    WallThickness,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ValueAxisType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Axis", typeof (AxisType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class AxisType
  {
    private object[] itemsField;

    private ItemsChoiceType25[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("CrossAt", typeof (string))]
    [XmlElement("Interlaced", typeof (bool))]
    [XmlElement("LogScale", typeof (bool))]
    [XmlElement("MajorGridLines", typeof (MajorGridLinesType))]
    [XmlElement("MajorInterval", typeof (string))]
    [XmlElement("MajorTickMarks", typeof (AxisTypeMajorTickMarks))]
    [XmlElement("Margin", typeof (bool))]
    [XmlElement("Max", typeof (string))]
    [XmlElement("Min", typeof (string))]
    [XmlElement("MinorGridLines", typeof (MinorGridLinesType))]
    [XmlElement("MinorInterval", typeof (string))]
    [XmlElement("MinorTickMarks", typeof (AxisTypeMinorTickMarks))]
    [XmlElement("Reverse", typeof (bool))]
    [XmlElement("Scalar", typeof (bool))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("Title", typeof (TitleType))]
    [XmlElement("Visible", typeof (bool))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType25[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class MajorGridLinesType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("ShowGridLines", typeof (bool))]
    [XmlElement("Style", typeof (StyleType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum AxisTypeMajorTickMarks
  {
    /// <remarks />
    None,

    /// <remarks />
    Inside,

    /// <remarks />
    Outside,

    /// <remarks />
    Cross,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class MinorGridLinesType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("ShowGridLines", typeof (bool))]
    [XmlElement("Style", typeof (StyleType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum AxisTypeMinorTickMarks
  {
    /// <remarks />
    None,

    /// <remarks />
    Inside,

    /// <remarks />
    Outside,

    /// <remarks />
    Cross,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class TitleType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Caption", typeof (string))]
    [XmlElement("Position", typeof (TitleTypePosition))]
    [XmlElement("Style", typeof (StyleType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum TitleTypePosition
  {
    /// <remarks />
    Center,

    /// <remarks />
    Near,

    /// <remarks />
    Far,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType25
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    CrossAt,

    /// <remarks />
    Interlaced,

    /// <remarks />
    LogScale,

    /// <remarks />
    MajorGridLines,

    /// <remarks />
    MajorInterval,

    /// <remarks />
    MajorTickMarks,

    /// <remarks />
    Margin,

    /// <remarks />
    Max,

    /// <remarks />
    Min,

    /// <remarks />
    MinorGridLines,

    /// <remarks />
    MinorInterval,

    /// <remarks />
    MinorTickMarks,

    /// <remarks />
    Reverse,

    /// <remarks />
    Scalar,

    /// <remarks />
    Style,

    /// <remarks />
    Title,

    /// <remarks />
    Visible,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class CategoryAxisType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Axis", typeof (AxisType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class LegendType
  {
    private object[] itemsField;

    private ItemsChoiceType24[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("InsidePlotArea", typeof (bool))]
    [XmlElement("Layout", typeof (LegendTypeLayout))]
    [XmlElement("Position", typeof (LegendTypePosition))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("Visible", typeof (bool))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType24[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum LegendTypeLayout
  {
    /// <remarks />
    Column,

    /// <remarks />
    Row,

    /// <remarks />
    Table,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum LegendTypePosition
  {
    /// <remarks />
    TopLeft,

    /// <remarks />
    TopCenter,

    /// <remarks />
    TopRight,

    /// <remarks />
    LeftTop,

    /// <remarks />
    LeftCenter,

    /// <remarks />
    LeftBottom,

    /// <remarks />
    RightTop,

    /// <remarks />
    RightCenter,

    /// <remarks />
    RightBottom,

    /// <remarks />
    BottomLeft,

    /// <remarks />
    BottomCenter,

    /// <remarks />
    BottomRight,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType24
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    InsidePlotArea,

    /// <remarks />
    Layout,

    /// <remarks />
    Position,

    /// <remarks />
    Style,

    /// <remarks />
    Visible,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class MarkerType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Size", typeof (string), DataType = "normalizedString")]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("Type", typeof (MarkerTypeType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum MarkerTypeType
  {
    /// <remarks />
    None,

    /// <remarks />
    Square,

    /// <remarks />
    Circle,

    /// <remarks />
    Diamond,

    /// <remarks />
    Triangle,

    /// <remarks />
    Cross,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataLabelType
  {
    private object[] itemsField;

    private ItemsChoiceType23[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Position", typeof (DataLabelTypePosition))]
    [XmlElement("Rotation", typeof (string), DataType = "integer")]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("Value", typeof (string))]
    [XmlElement("Visible", typeof (bool))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType23[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum DataLabelTypePosition
  {
    /// <remarks />
    Auto,

    /// <remarks />
    Top,

    /// <remarks />
    TopLeft,

    /// <remarks />
    TopRight,

    /// <remarks />
    Left,

    /// <remarks />
    Center,

    /// <remarks />
    Right,

    /// <remarks />
    BottomLeft,

    /// <remarks />
    Bottom,

    /// <remarks />
    BottomRight,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType23
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Position,

    /// <remarks />
    Rotation,

    /// <remarks />
    Style,

    /// <remarks />
    Value,

    /// <remarks />
    Visible,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataValuesType
  {
    private DataValueType[] dataValueField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("DataValue")]
    public DataValueType[] DataValue
    {
      get { return dataValueField; }
      set { dataValueField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataPointType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Action", typeof (ActionType))]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementOutput", typeof (DataPointTypeDataElementOutput))]
    [XmlElement("DataLabel", typeof (DataLabelType))]
    [XmlElement("DataValues", typeof (DataValuesType))]
    [XmlElement("Marker", typeof (MarkerType))]
    [XmlElement("Style", typeof (StyleType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum DataPointTypeDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataPointsType
  {
    private DataPointType[] dataPointField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("DataPoint")]
    public DataPointType[] DataPoint
    {
      get { return dataPointField; }
      set { dataPointField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ChartSeriesType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("DataPoints", typeof (DataPointsType))]
    [XmlElement("PlotType", typeof (ChartSeriesTypePlotType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ChartSeriesTypePlotType
  {
    /// <remarks />
    Auto,

    /// <remarks />
    Line,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ChartDataType
  {
    private ChartSeriesType[] chartSeriesField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("ChartSeries")]
    public ChartSeriesType[] ChartSeries
    {
      get { return chartSeriesField; }
      set { chartSeriesField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class StaticCategoriesType
  {
    private StaticMemberType[] staticMemberField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("StaticMember")]
    public StaticMemberType[] StaticMember
    {
      get { return staticMemberField; }
      set { staticMemberField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class StaticMemberType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Label", typeof (string))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DynamicCategoriesType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Grouping", typeof (GroupingType))]
    [XmlElement("Label", typeof (string))]
    [XmlElement("Sorting", typeof (SortingType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class CategoryGroupingType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("DynamicCategories", typeof (DynamicCategoriesType))]
    [XmlElement("StaticCategories", typeof (StaticCategoriesType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class CategoryGroupingsType
  {
    private CategoryGroupingType[] categoryGroupingField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("CategoryGrouping")]
    public CategoryGroupingType[] CategoryGrouping
    {
      get { return categoryGroupingField; }
      set { categoryGroupingField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class StaticSeriesType
  {
    private StaticMemberType[] staticMemberField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("StaticMember")]
    public StaticMemberType[] StaticMember
    {
      get { return staticMemberField; }
      set { staticMemberField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DynamicSeriesType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Grouping", typeof (GroupingType))]
    [XmlElement("Label", typeof (string))]
    [XmlElement("Sorting", typeof (SortingType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class SeriesGroupingType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("DynamicSeries", typeof (DynamicSeriesType))]
    [XmlElement("StaticSeries", typeof (StaticSeriesType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class SeriesGroupingsType
  {
    private SeriesGroupingType[] seriesGroupingField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("SeriesGrouping")]
    public SeriesGroupingType[] SeriesGrouping
    {
      get { return seriesGroupingField; }
      set { seriesGroupingField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DetailsType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Grouping", typeof (GroupingType))]
    [XmlElement("Sorting", typeof (SortingType))]
    [XmlElement("TableRows", typeof (TableRowsType))]
    [XmlElement("Visibility", typeof (VisibilityType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class TableRowsType
  {
    private TableRowType[] tableRowField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("TableRow")]
    public TableRowType[] TableRow
    {
      get { return tableRowField; }
      set { tableRowField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class TableRowType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("TableCells", typeof (TableCellsType))]
    [XmlElement("Visibility", typeof (VisibilityType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class TableCellsType
  {
    private TableCellType[] tableCellField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("TableCell")]
    public TableCellType[] TableCell
    {
      get { return tableCellField; }
      set { tableCellField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class TableCellType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("ColSpan", typeof (uint))]
    [XmlElement("ReportItems", typeof (ReportItemsType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class FooterType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("RepeatOnNewPage", typeof (bool))]
    [XmlElement("TableRows", typeof (TableRowsType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class TableGroupType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Footer", typeof (FooterType))]
    [XmlElement("Grouping", typeof (GroupingType))]
    [XmlElement("Header", typeof (HeaderType))]
    [XmlElement("Sorting", typeof (SortingType))]
    [XmlElement("Visibility", typeof (VisibilityType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class HeaderType
  {
    private object[] itemsField;

    private ItemsChoiceType20[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("FixedHeader", typeof (bool))]
    [XmlElement("RepeatOnNewPage", typeof (bool))]
    [XmlElement("TableRows", typeof (TableRowsType))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType20[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType20
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    FixedHeader,

    /// <remarks />
    RepeatOnNewPage,

    /// <remarks />
    TableRows,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class TableGroupsType
  {
    private TableGroupType[] tableGroupField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("TableGroup")]
    public TableGroupType[] TableGroup
    {
      get { return tableGroupField; }
      set { tableGroupField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class TableColumnType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("FixedHeader", typeof (bool))]
    [XmlElement("Visibility", typeof (VisibilityType))]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class TableColumnsType
  {
    private TableColumnType[] tableColumnField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("TableColumn")]
    public TableColumnType[] TableColumn
    {
      get { return tableColumnField; }
      set { tableColumnField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class TableType
  {
    private object[] itemsField;

    private ItemsChoiceType21[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Action", typeof (ActionType))]
    [XmlElement("Bookmark", typeof (string))]
    [XmlElement("CustomProperties", typeof (CustomPropertiesType))]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementOutput", typeof (TableTypeDataElementOutput))]
    [XmlElement("DataSetName", typeof (string))]
    [XmlElement("DetailDataCollectionName", typeof (string))]
    [XmlElement("DetailDataElementName", typeof (string))]
    [XmlElement("DetailDataElementOutput", typeof (TableTypeDetailDataElementOutput))]
    [XmlElement("Details", typeof (DetailsType))]
    [XmlElement("FillPage", typeof (bool))]
    [XmlElement("Filters", typeof (FiltersType))]
    [XmlElement("Footer", typeof (FooterType))]
    [XmlElement("Header", typeof (HeaderType))]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("KeepTogether", typeof (bool))]
    [XmlElement("Label", typeof (string))]
    [XmlElement("Left", typeof (string), DataType = "normalizedString")]
    [XmlElement("LinkToChild", typeof (string))]
    [XmlElement("NoRows", typeof (string))]
    [XmlElement("PageBreakAtEnd", typeof (bool))]
    [XmlElement("PageBreakAtStart", typeof (bool))]
    [XmlElement("RepeatWith", typeof (string))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("TableColumns", typeof (TableColumnsType))]
    [XmlElement("TableGroups", typeof (TableGroupsType))]
    [XmlElement("ToolTip", typeof (string))]
    [XmlElement("Top", typeof (string), DataType = "normalizedString")]
    [XmlElement("Visibility", typeof (VisibilityType))]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    [XmlElement("ZIndex", typeof (uint))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType21[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum TableTypeDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum TableTypeDetailDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType21
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Action,

    /// <remarks />
    Bookmark,

    /// <remarks />
    CustomProperties,

    /// <remarks />
    DataElementName,

    /// <remarks />
    DataElementOutput,

    /// <remarks />
    DataSetName,

    /// <remarks />
    DetailDataCollectionName,

    /// <remarks />
    DetailDataElementName,

    /// <remarks />
    DetailDataElementOutput,

    /// <remarks />
    Details,

    /// <remarks />
    FillPage,

    /// <remarks />
    Filters,

    /// <remarks />
    Footer,

    /// <remarks />
    Header,

    /// <remarks />
    Height,

    /// <remarks />
    KeepTogether,

    /// <remarks />
    Label,

    /// <remarks />
    Left,

    /// <remarks />
    LinkToChild,

    /// <remarks />
    NoRows,

    /// <remarks />
    PageBreakAtEnd,

    /// <remarks />
    PageBreakAtStart,

    /// <remarks />
    RepeatWith,

    /// <remarks />
    Style,

    /// <remarks />
    TableColumns,

    /// <remarks />
    TableGroups,

    /// <remarks />
    ToolTip,

    /// <remarks />
    Top,

    /// <remarks />
    Visibility,

    /// <remarks />
    Width,

    /// <remarks />
    ZIndex,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class MatrixColumnType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class MatrixColumnsType
  {
    private MatrixColumnType[] matrixColumnField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("MatrixColumn")]
    public MatrixColumnType[] MatrixColumn
    {
      get { return matrixColumnField; }
      set { matrixColumnField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class MatrixCellType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("ReportItems", typeof (ReportItemsType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class MatrixCellsType
  {
    private MatrixCellType[] matrixCellField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("MatrixCell")]
    public MatrixCellType[] MatrixCell
    {
      get { return matrixCellField; }
      set { matrixCellField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class MatrixRowType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("MatrixCells", typeof (MatrixCellsType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class MatrixRowsType
  {
    private MatrixRowType[] matrixRowField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("MatrixRow")]
    public MatrixRowType[] MatrixRow
    {
      get { return matrixRowField; }
      set { matrixRowField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class StaticRowType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("ReportItems", typeof (ReportItemsType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class StaticRowsType
  {
    private StaticRowType[] staticRowField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("StaticRow")]
    public StaticRowType[] StaticRow
    {
      get { return staticRowField; }
      set { staticRowField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class RowGroupingType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("DynamicRows", typeof (DynamicColumnsRowsType))]
    [XmlElement("FixedHeader", typeof (bool))]
    [XmlElement("StaticRows", typeof (StaticRowsType))]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DynamicColumnsRowsType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Grouping", typeof (GroupingType))]
    [XmlElement("ReportItems", typeof (ReportItemsType))]
    [XmlElement("Sorting", typeof (SortingType))]
    [XmlElement("Subtotal", typeof (SubtotalType))]
    [XmlElement("Visibility", typeof (VisibilityType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class SubtotalType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementOutput", typeof (SubtotalTypeDataElementOutput))]
    [XmlElement("Position", typeof (SubtotalTypePosition))]
    [XmlElement("ReportItems", typeof (ReportItemsType))]
    [XmlElement("Style", typeof (StyleType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum SubtotalTypeDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum SubtotalTypePosition
  {
    /// <remarks />
    Before,

    /// <remarks />
    After,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class RowGroupingsType
  {
    private RowGroupingType[] rowGroupingField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("RowGrouping")]
    public RowGroupingType[] RowGrouping
    {
      get { return rowGroupingField; }
      set { rowGroupingField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class StaticColumnType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("ReportItems", typeof (ReportItemsType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class StaticColumnsType
  {
    private StaticColumnType[] staticColumnField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("StaticColumn")]
    public StaticColumnType[] StaticColumn
    {
      get { return staticColumnField; }
      set { staticColumnField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ColumnGroupingType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("DynamicColumns", typeof (DynamicColumnsRowsType))]
    [XmlElement("FixedHeader", typeof (bool))]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("StaticColumns", typeof (StaticColumnsType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ColumnGroupingsType
  {
    private ColumnGroupingType[] columnGroupingField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("ColumnGrouping")]
    public ColumnGroupingType[] ColumnGrouping
    {
      get { return columnGroupingField; }
      set { columnGroupingField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class CornerType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("ReportItems", typeof (ReportItemsType))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class MatrixType
  {
    private object[] itemsField;

    private ItemsChoiceType19[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Action", typeof (ActionType))]
    [XmlElement("Bookmark", typeof (string))]
    [XmlElement("CellDataElementName", typeof (string))]
    [XmlElement("CellDataElementOutput", typeof (MatrixTypeCellDataElementOutput))]
    [XmlElement("ColumnGroupings", typeof (ColumnGroupingsType))]
    [XmlElement("Corner", typeof (CornerType))]
    [XmlElement("CustomProperties", typeof (CustomPropertiesType))]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementOutput", typeof (MatrixTypeDataElementOutput))]
    [XmlElement("DataSetName", typeof (string))]
    [XmlElement("Filters", typeof (FiltersType))]
    [XmlElement("GroupsBeforeRowHeaders", typeof (uint))]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("KeepTogether", typeof (bool))]
    [XmlElement("Label", typeof (string))]
    [XmlElement("LayoutDirection", typeof (MatrixTypeLayoutDirection))]
    [XmlElement("Left", typeof (string), DataType = "normalizedString")]
    [XmlElement("LinkToChild", typeof (string))]
    [XmlElement("MatrixColumns", typeof (MatrixColumnsType))]
    [XmlElement("MatrixRows", typeof (MatrixRowsType))]
    [XmlElement("NoRows", typeof (string))]
    [XmlElement("PageBreakAtEnd", typeof (bool))]
    [XmlElement("PageBreakAtStart", typeof (bool))]
    [XmlElement("RepeatWith", typeof (string))]
    [XmlElement("RowGroupings", typeof (RowGroupingsType))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("ToolTip", typeof (string))]
    [XmlElement("Top", typeof (string), DataType = "normalizedString")]
    [XmlElement("Visibility", typeof (VisibilityType))]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    [XmlElement("ZIndex", typeof (uint))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType19[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum MatrixTypeCellDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum MatrixTypeDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum MatrixTypeLayoutDirection
  {
    /// <remarks />
    LTR,

    /// <remarks />
    RTL,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType19
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Action,

    /// <remarks />
    Bookmark,

    /// <remarks />
    CellDataElementName,

    /// <remarks />
    CellDataElementOutput,

    /// <remarks />
    ColumnGroupings,

    /// <remarks />
    Corner,

    /// <remarks />
    CustomProperties,

    /// <remarks />
    DataElementName,

    /// <remarks />
    DataElementOutput,

    /// <remarks />
    DataSetName,

    /// <remarks />
    Filters,

    /// <remarks />
    GroupsBeforeRowHeaders,

    /// <remarks />
    Height,

    /// <remarks />
    KeepTogether,

    /// <remarks />
    Label,

    /// <remarks />
    LayoutDirection,

    /// <remarks />
    Left,

    /// <remarks />
    LinkToChild,

    /// <remarks />
    MatrixColumns,

    /// <remarks />
    MatrixRows,

    /// <remarks />
    NoRows,

    /// <remarks />
    PageBreakAtEnd,

    /// <remarks />
    PageBreakAtStart,

    /// <remarks />
    RepeatWith,

    /// <remarks />
    RowGroupings,

    /// <remarks />
    Style,

    /// <remarks />
    ToolTip,

    /// <remarks />
    Top,

    /// <remarks />
    Visibility,

    /// <remarks />
    Width,

    /// <remarks />
    ZIndex,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ListType
  {
    private object[] itemsField;

    private ItemsChoiceType18[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Action", typeof (ActionType))]
    [XmlElement("Bookmark", typeof (string))]
    [XmlElement("CustomProperties", typeof (CustomPropertiesType))]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementOutput", typeof (ListTypeDataElementOutput))]
    [XmlElement("DataInstanceElementOutput", typeof (ListTypeDataInstanceElementOutput))]
    [XmlElement("DataInstanceName", typeof (string))]
    [XmlElement("DataSetName", typeof (string))]
    [XmlElement("FillPage", typeof (bool))]
    [XmlElement("Filters", typeof (FiltersType))]
    [XmlElement("Grouping", typeof (GroupingType))]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("KeepTogether", typeof (bool))]
    [XmlElement("Label", typeof (string))]
    [XmlElement("Left", typeof (string), DataType = "normalizedString")]
    [XmlElement("LinkToChild", typeof (string))]
    [XmlElement("NoRows", typeof (string))]
    [XmlElement("PageBreakAtEnd", typeof (bool))]
    [XmlElement("PageBreakAtStart", typeof (bool))]
    [XmlElement("RepeatWith", typeof (string))]
    [XmlElement("ReportItems", typeof (ReportItemsType))]
    [XmlElement("Sorting", typeof (SortingType))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("ToolTip", typeof (string))]
    [XmlElement("Top", typeof (string), DataType = "normalizedString")]
    [XmlElement("Visibility", typeof (VisibilityType))]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    [XmlElement("ZIndex", typeof (uint))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType18[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ListTypeDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ListTypeDataInstanceElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType18
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Action,

    /// <remarks />
    Bookmark,

    /// <remarks />
    CustomProperties,

    /// <remarks />
    DataElementName,

    /// <remarks />
    DataElementOutput,

    /// <remarks />
    DataInstanceElementOutput,

    /// <remarks />
    DataInstanceName,

    /// <remarks />
    DataSetName,

    /// <remarks />
    FillPage,

    /// <remarks />
    Filters,

    /// <remarks />
    Grouping,

    /// <remarks />
    Height,

    /// <remarks />
    KeepTogether,

    /// <remarks />
    Label,

    /// <remarks />
    Left,

    /// <remarks />
    LinkToChild,

    /// <remarks />
    NoRows,

    /// <remarks />
    PageBreakAtEnd,

    /// <remarks />
    PageBreakAtStart,

    /// <remarks />
    RepeatWith,

    /// <remarks />
    ReportItems,

    /// <remarks />
    Sorting,

    /// <remarks />
    Style,

    /// <remarks />
    ToolTip,

    /// <remarks />
    Top,

    /// <remarks />
    Visibility,

    /// <remarks />
    Width,

    /// <remarks />
    ZIndex,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class SubreportType
  {
    private object[] itemsField;

    private ItemsChoiceType16[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Action", typeof (ActionType))]
    [XmlElement("Bookmark", typeof (string))]
    [XmlElement("CustomProperties", typeof (CustomPropertiesType))]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementOutput", typeof (SubreportTypeDataElementOutput))]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("Label", typeof (string))]
    [XmlElement("Left", typeof (string), DataType = "normalizedString")]
    [XmlElement("LinkToChild", typeof (string))]
    [XmlElement("MergeTransactions", typeof (bool))]
    [XmlElement("NoRows", typeof (string))]
    [XmlElement("Parameters", typeof (ParametersType))]
    [XmlElement("RepeatWith", typeof (string))]
    [XmlElement("ReportName", typeof (string))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("ToolTip", typeof (string))]
    [XmlElement("Top", typeof (string), DataType = "normalizedString")]
    [XmlElement("Visibility", typeof (VisibilityType))]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    [XmlElement("ZIndex", typeof (uint))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType16[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum SubreportTypeDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType16
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Action,

    /// <remarks />
    Bookmark,

    /// <remarks />
    CustomProperties,

    /// <remarks />
    DataElementName,

    /// <remarks />
    DataElementOutput,

    /// <remarks />
    Height,

    /// <remarks />
    Label,

    /// <remarks />
    Left,

    /// <remarks />
    LinkToChild,

    /// <remarks />
    MergeTransactions,

    /// <remarks />
    NoRows,

    /// <remarks />
    Parameters,

    /// <remarks />
    RepeatWith,

    /// <remarks />
    ReportName,

    /// <remarks />
    Style,

    /// <remarks />
    ToolTip,

    /// <remarks />
    Top,

    /// <remarks />
    Visibility,

    /// <remarks />
    Width,

    /// <remarks />
    ZIndex,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ImageType
  {
    private object[] itemsField;

    private ItemsChoiceType15[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Action", typeof (ActionType))]
    [XmlElement("Bookmark", typeof (string))]
    [XmlElement("CustomProperties", typeof (CustomPropertiesType))]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementOutput", typeof (ImageTypeDataElementOutput))]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("Label", typeof (string))]
    [XmlElement("Left", typeof (string), DataType = "normalizedString")]
    [XmlElement("LinkToChild", typeof (string))]
    [XmlElement("MIMEType", typeof (string))]
    [XmlElement("RepeatWith", typeof (string))]
    [XmlElement("Sizing", typeof (ImageTypeSizing))]
    [XmlElement("Source", typeof (ImageTypeSource))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("ToolTip", typeof (string))]
    [XmlElement("Top", typeof (string), DataType = "normalizedString")]
    [XmlElement("Value", typeof (string))]
    [XmlElement("Visibility", typeof (VisibilityType))]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    [XmlElement("ZIndex", typeof (uint))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType15[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ImageTypeDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ImageTypeSizing
  {
    /// <remarks />
    AutoSize,

    /// <remarks />
    Fit,

    /// <remarks />
    FitProportional,

    /// <remarks />
    Clip,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ImageTypeSource
  {
    /// <remarks />
    External,

    /// <remarks />
    Embedded,

    /// <remarks />
    Database,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType15
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Action,

    /// <remarks />
    Bookmark,

    /// <remarks />
    CustomProperties,

    /// <remarks />
    DataElementName,

    /// <remarks />
    DataElementOutput,

    /// <remarks />
    Height,

    /// <remarks />
    Label,

    /// <remarks />
    Left,

    /// <remarks />
    LinkToChild,

    /// <remarks />
    MIMEType,

    /// <remarks />
    RepeatWith,

    /// <remarks />
    Sizing,

    /// <remarks />
    Source,

    /// <remarks />
    Style,

    /// <remarks />
    ToolTip,

    /// <remarks />
    Top,

    /// <remarks />
    Value,

    /// <remarks />
    Visibility,

    /// <remarks />
    Width,

    /// <remarks />
    ZIndex,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class UserSortType
  {
    private object[] itemsField;

    private ItemsChoiceType13[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("SortExpression", typeof (string))]
    [XmlElement("SortExpressionScope", typeof (string))]
    [XmlElement("SortTarget", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType13[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType13
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    SortExpression,

    /// <remarks />
    SortExpressionScope,

    /// <remarks />
    SortTarget,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ToggleImageType
  {
    private object[] itemsField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("InitialState", typeof (string))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class TextboxType
  {
    private object[] itemsField;

    private ItemsChoiceType14[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Action", typeof (ActionType))]
    [XmlElement("Bookmark", typeof (string))]
    [XmlElement("CanGrow", typeof (bool))]
    [XmlElement("CanShrink", typeof (bool))]
    [XmlElement("CustomProperties", typeof (CustomPropertiesType))]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementOutput", typeof (TextboxTypeDataElementOutput))]
    [XmlElement("DataElementStyle", typeof (TextboxTypeDataElementStyle))]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("HideDuplicates", typeof (string))]
    [XmlElement("Label", typeof (string))]
    [XmlElement("Left", typeof (string), DataType = "normalizedString")]
    [XmlElement("LinkToChild", typeof (string))]
    [XmlElement("RepeatWith", typeof (string))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("ToggleImage", typeof (ToggleImageType))]
    [XmlElement("ToolTip", typeof (string))]
    [XmlElement("Top", typeof (string), DataType = "normalizedString")]
    [XmlElement("UserSort", typeof (UserSortType))]
    [XmlElement("Value", typeof (string))]
    [XmlElement("Visibility", typeof (VisibilityType))]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    [XmlElement("ZIndex", typeof (uint))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType14[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum TextboxTypeDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum TextboxTypeDataElementStyle
  {
    /// <remarks />
    Auto,

    /// <remarks />
    AttributeNormal,

    /// <remarks />
    ElementNormal,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType14
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Action,

    /// <remarks />
    Bookmark,

    /// <remarks />
    CanGrow,

    /// <remarks />
    CanShrink,

    /// <remarks />
    CustomProperties,

    /// <remarks />
    DataElementName,

    /// <remarks />
    DataElementOutput,

    /// <remarks />
    DataElementStyle,

    /// <remarks />
    Height,

    /// <remarks />
    HideDuplicates,

    /// <remarks />
    Label,

    /// <remarks />
    Left,

    /// <remarks />
    LinkToChild,

    /// <remarks />
    RepeatWith,

    /// <remarks />
    Style,

    /// <remarks />
    ToggleImage,

    /// <remarks />
    ToolTip,

    /// <remarks />
    Top,

    /// <remarks />
    UserSort,

    /// <remarks />
    Value,

    /// <remarks />
    Visibility,

    /// <remarks />
    Width,

    /// <remarks />
    ZIndex,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class RectangleType
  {
    private object[] itemsField;

    private ItemsChoiceType12[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Action", typeof (ActionType))]
    [XmlElement("Bookmark", typeof (string))]
    [XmlElement("CustomProperties", typeof (CustomPropertiesType))]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementOutput", typeof (RectangleTypeDataElementOutput))]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("Label", typeof (string))]
    [XmlElement("Left", typeof (string), DataType = "normalizedString")]
    [XmlElement("LinkToChild", typeof (string))]
    [XmlElement("PageBreakAtEnd", typeof (bool))]
    [XmlElement("PageBreakAtStart", typeof (bool))]
    [XmlElement("RepeatWith", typeof (string))]
    [XmlElement("ReportItems", typeof (ReportItemsType))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("ToolTip", typeof (string))]
    [XmlElement("Top", typeof (string), DataType = "normalizedString")]
    [XmlElement("Visibility", typeof (VisibilityType))]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    [XmlElement("ZIndex", typeof (uint))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType12[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum RectangleTypeDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType12
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Action,

    /// <remarks />
    Bookmark,

    /// <remarks />
    CustomProperties,

    /// <remarks />
    DataElementName,

    /// <remarks />
    DataElementOutput,

    /// <remarks />
    Height,

    /// <remarks />
    Label,

    /// <remarks />
    Left,

    /// <remarks />
    LinkToChild,

    /// <remarks />
    PageBreakAtEnd,

    /// <remarks />
    PageBreakAtStart,

    /// <remarks />
    RepeatWith,

    /// <remarks />
    ReportItems,

    /// <remarks />
    Style,

    /// <remarks />
    ToolTip,

    /// <remarks />
    Top,

    /// <remarks />
    Visibility,

    /// <remarks />
    Width,

    /// <remarks />
    ZIndex,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class LineType
  {
    private object[] itemsField;

    private ItemsChoiceType11[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Action", typeof (ActionType))]
    [XmlElement("Bookmark", typeof (string))]
    [XmlElement("CustomProperties", typeof (CustomPropertiesType))]
    [XmlElement("DataElementName", typeof (string))]
    [XmlElement("DataElementOutput", typeof (LineTypeDataElementOutput))]
    [XmlElement("Height", typeof (string), DataType = "normalizedString")]
    [XmlElement("Label", typeof (string))]
    [XmlElement("Left", typeof (string), DataType = "normalizedString")]
    [XmlElement("LinkToChild", typeof (string))]
    [XmlElement("RepeatWith", typeof (string))]
    [XmlElement("Style", typeof (StyleType))]
    [XmlElement("ToolTip", typeof (string))]
    [XmlElement("Top", typeof (string), DataType = "normalizedString")]
    [XmlElement("Visibility", typeof (VisibilityType))]
    [XmlElement("Width", typeof (string), DataType = "normalizedString")]
    [XmlElement("ZIndex", typeof (uint))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType11[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum LineTypeDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType11
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Action,

    /// <remarks />
    Bookmark,

    /// <remarks />
    CustomProperties,

    /// <remarks />
    DataElementName,

    /// <remarks />
    DataElementOutput,

    /// <remarks />
    Height,

    /// <remarks />
    Label,

    /// <remarks />
    Left,

    /// <remarks />
    LinkToChild,

    /// <remarks />
    RepeatWith,

    /// <remarks />
    Style,

    /// <remarks />
    ToolTip,

    /// <remarks />
    Top,

    /// <remarks />
    Visibility,

    /// <remarks />
    Width,

    /// <remarks />
    ZIndex,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class QueryParameterType
  {
    private object[] itemsField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("Value", typeof (string))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAttribute()]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class QueryParametersType
  {
    private QueryParameterType[] queryParameterField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("QueryParameter")]
    public QueryParameterType[] QueryParameter
    {
      get { return queryParameterField; }
      set { queryParameterField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class QueryType
  {
    private object[] itemsField;

    private ItemsChoiceType2[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("CommandText", typeof (string))]
    [XmlElement("CommandType", typeof (QueryTypeCommandType))]
    [XmlElement("DataSourceName", typeof (string))]
    [XmlElement("QueryParameters", typeof (QueryParametersType))]
    [XmlElement("Timeout", typeof (uint))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType2[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum QueryTypeCommandType
  {
    /// <remarks />
    Text,

    /// <remarks />
    StoredProcedure,

    /// <remarks />
    TableDirect,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType2
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    CommandText,

    /// <remarks />
    CommandType,

    /// <remarks />
    DataSourceName,

    /// <remarks />
    QueryParameters,

    /// <remarks />
    Timeout,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class FieldType
  {
    private object[] itemsField;

    private ItemsChoiceType1[] itemsElementNameField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("DataField", typeof (string))]
    [XmlElement("Value", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType1[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType1
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    DataField,

    /// <remarks />
    Value,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class FieldsType
  {
    private FieldType[] fieldField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("Field")]
    public FieldType[] Field
    {
      get { return fieldField; }
      set { fieldField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataSetType
  {
    private object[] itemsField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("AccentSensitivity", typeof (DataSetTypeAccentSensitivity))]
    [XmlElement("CaseSensitivity", typeof (DataSetTypeCaseSensitivity))]
    [XmlElement("Collation", typeof (string))]
    [XmlElement("Fields", typeof (FieldsType))]
    [XmlElement("Filters", typeof (FiltersType))]
    [XmlElement("KanatypeSensitivity", typeof (DataSetTypeKanatypeSensitivity))]
    [XmlElement("Query", typeof (QueryType))]
    [XmlElement("WidthSensitivity", typeof (DataSetTypeWidthSensitivity))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAttribute(DataType = "normalizedString")]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum DataSetTypeAccentSensitivity
  {
    /// <remarks />
    True,

    /// <remarks />
    False,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum DataSetTypeCaseSensitivity
  {
    /// <remarks />
    True,

    /// <remarks />
    False,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum DataSetTypeKanatypeSensitivity
  {
    /// <remarks />
    True,

    /// <remarks />
    False,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum DataSetTypeWidthSensitivity
  {
    /// <remarks />
    True,

    /// <remarks />
    False,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataSetsType
  {
    private DataSetType[] dataSetField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("DataSet")]
    public DataSetType[] DataSet
    {
      get { return dataSetField; }
      set { dataSetField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class ConnectionPropertiesType
  {
    private object[] itemsField;

    private ItemsChoiceType[] itemsElementNameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("ConnectString", typeof (string))]
    [XmlElement("DataProvider", typeof (string))]
    [XmlElement("IntegratedSecurity", typeof (bool))]
    [XmlElement("Prompt", typeof (string))]
    [XmlChoiceIdentifier("ItemsElementName")]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlElement("ItemsElementName")]
    [XmlIgnore()]
    public ItemsChoiceType[] ItemsElementName
    {
      get { return itemsElementNameField; }
      set { itemsElementNameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    ConnectString,

    /// <remarks />
    DataProvider,

    /// <remarks />
    IntegratedSecurity,

    /// <remarks />
    Prompt,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataSourceType
  {
    private object[] itemsField;

    private string nameField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlAnyElement()]
    [XmlElement("ConnectionProperties", typeof (ConnectionPropertiesType))]
    [XmlElement("DataSourceReference", typeof (string))]
    [XmlElement("Transaction", typeof (bool))]
    public object[] Items
    {
      get { return itemsField; }
      set { itemsField = value; }
    }

    /// <remarks />
    [XmlAttribute()]
    public string Name
    {
      get { return nameField; }
      set { nameField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [DebuggerStepThrough()]
  [DesignerCategory("code")]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition")]
  public partial class DataSourcesType
  {
    private DataSourceType[] dataSourceField;

    private XmlAttribute[] anyAttrField;

    /// <remarks />
    [XmlElement("DataSource")]
    public DataSourceType[] DataSource
    {
      get { return dataSourceField; }
      set { dataSourceField = value; }
    }

    /// <remarks />
    [XmlAnyAttribute()]
    public XmlAttribute[] AnyAttr
    {
      get { return anyAttrField; }
      set { anyAttrField = value; }
    }
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType7
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    BookmarkLink,

    /// <remarks />
    Parameters,

    /// <remarks />
    ReportName,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType8
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    BookmarkLink,

    /// <remarks />
    Drillthrough,

    /// <remarks />
    Hyperlink,

    /// <remarks />
    Label,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ChartTypeChartElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ChartTypeDataElementOutput
  {
    /// <remarks />
    Output,

    /// <remarks />
    NoOutput,

    /// <remarks />
    ContentsOnly,

    /// <remarks />
    Auto,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ChartTypePalette
  {
    /// <remarks />
    Default,

    /// <remarks />
    EarthTones,

    /// <remarks />
    Excel,

    /// <remarks />
    GrayScale,

    /// <remarks />
    Light,

    /// <remarks />
    Pastel,

    /// <remarks />
    SemiTransparent,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ChartTypeSubtype
  {
    /// <remarks />
    Stacked,

    /// <remarks />
    PercentStacked,

    /// <remarks />
    Plain,

    /// <remarks />
    Smooth,

    /// <remarks />
    Exploded,

    /// <remarks />
    Line,

    /// <remarks />
    SmoothLine,

    /// <remarks />
    HighLowClose,

    /// <remarks />
    OpenHighLowClose,

    /// <remarks />
    Candlestick,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ChartTypeType
  {
    /// <remarks />
    Column,

    /// <remarks />
    Bar,

    /// <remarks />
    Line,

    /// <remarks />
    Pie,

    /// <remarks />
    Scatter,

    /// <remarks />
    Bubble,

    /// <remarks />
    Area,

    /// <remarks />
    Doughnut,

    /// <remarks />
    Stock,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType27
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Action,

    /// <remarks />
    Bookmark,

    /// <remarks />
    CategoryAxis,

    /// <remarks />
    CategoryGroupings,

    /// <remarks />
    ChartData,

    /// <remarks />
    ChartElementOutput,

    /// <remarks />
    CustomProperties,

    /// <remarks />
    DataElementName,

    /// <remarks />
    DataElementOutput,

    /// <remarks />
    DataSetName,

    /// <remarks />
    Filters,

    /// <remarks />
    Height,

    /// <remarks />
    KeepTogether,

    /// <remarks />
    Label,

    /// <remarks />
    Left,

    /// <remarks />
    Legend,

    /// <remarks />
    LinkToChild,

    /// <remarks />
    NoRows,

    /// <remarks />
    PageBreakAtEnd,

    /// <remarks />
    PageBreakAtStart,

    /// <remarks />
    Palette,

    /// <remarks />
    PlotArea,

    /// <remarks />
    PointWidth,

    /// <remarks />
    SeriesGroupings,

    /// <remarks />
    Style,

    /// <remarks />
    Subtype,

    /// <remarks />
    ThreeDProperties,

    /// <remarks />
    Title,

    /// <remarks />
    ToolTip,

    /// <remarks />
    Top,

    /// <remarks />
    Type,

    /// <remarks />
    ValueAxis,

    /// <remarks />
    Visibility,

    /// <remarks />
    Width,

    /// <remarks />
    ZIndex,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType30
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    ColumnSpacing,

    /// <remarks />
    Columns,

    /// <remarks />
    Height,

    /// <remarks />
    ReportItems,

    /// <remarks />
    Style,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(AnonymousType = true)]
  public enum ReportDataElementStyle
  {
    /// <remarks />
    AttributeNormal,

    /// <remarks />
    ElementNormal,
  }

  /// <remarks />
  [GeneratedCode("xsd", "2.0.50727.42")]
  [Serializable()]
  [XmlType(Namespace = "http://schemas.microsoft.com/sqlserver/reporting/2005/01/reportdefinition", IncludeInSchema = false)]
  public enum ItemsChoiceType37
  {
    /// <remarks />
    [XmlEnum("##any:")] Item,

    /// <remarks />
    Author,

    /// <remarks />
    AutoRefresh,

    /// <remarks />
    Body,

    /// <remarks />
    BottomMargin,

    /// <remarks />
    Classes,

    /// <remarks />
    Code,

    /// <remarks />
    CodeModules,

    /// <remarks />
    CustomProperties,

    /// <remarks />
    DataElementName,

    /// <remarks />
    DataElementStyle,

    /// <remarks />
    DataSchema,

    /// <remarks />
    DataSets,

    /// <remarks />
    DataSources,

    /// <remarks />
    DataTransform,

    /// <remarks />
    Description,

    /// <remarks />
    EmbeddedImages,

    /// <remarks />
    InteractiveHeight,

    /// <remarks />
    InteractiveWidth,

    /// <remarks />
    Language,

    /// <remarks />
    LeftMargin,

    /// <remarks />
    PageFooter,

    /// <remarks />
    PageHeader,

    /// <remarks />
    PageHeight,

    /// <remarks />
    PageWidth,

    /// <remarks />
    ReportParameters,

    /// <remarks />
    RightMargin,

    /// <remarks />
    TopMargin,

    /// <remarks />
    Width,
  }
}